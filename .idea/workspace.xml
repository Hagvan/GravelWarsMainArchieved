<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7dfb8d58-7811-493f-b783-28e31d1f9c3a" name="Changes" comment="Implemented Mercenaries.java movement using the tick() method which goes from MapManager.java timer. Using dijkstra path finding algorithm for pathfinding.&#10;Implemented basic capital nodes where Mercenaries can be spawned.&#10;TODO: Create a proper unit test for Mercenaries movement through the map.&#10;TODO: Polish Player.java and everything related to Mercenaries creation and management.">
      <change afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/data/GameData.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/managers/GameManager.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/Coordinates.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/map/Coordinates.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/MapData.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/MapDataLocal.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/data/MapData.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/MapManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/managers/MapManager.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/MapNode.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/map/MapNode.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/MapRoad.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/map/MapRoad.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/Mercenaries.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/map/Mercenaries.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/MoveSquadOrder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/MoveSquadOrder.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/gravelwars/core/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/gravelwars/core/Player.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2BvxvSOa4kmbYTxLfFauWKegFo6" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="gravelwars.core" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="Main" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="gravelwars.Main" />
      <module name="GravelWars.main" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="GravelWarsMain" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="GravelWarsMain" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7dfb8d58-7811-493f-b783-28e31d1f9c3a" name="Changes" comment="" />
      <created>1657800589429</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1657800589429</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial commit.">
      <created>1657876384757</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1657876384757</updated>
    </task>
    <task id="LOCAL-00002" summary="Initial implementation of most base classes before adding networking and pathfinding.">
      <created>1660159109046</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1660159109046</updated>
    </task>
    <task id="LOCAL-00003" summary="Initial implementation of most base classes before adding networking and pathfinding.">
      <created>1660159269240</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1660159269240</updated>
    </task>
    <task id="LOCAL-00004" summary="Finished implementing serialization to the hard drive in json format and loading the save back into the system + relinking all the references using init().">
      <created>1663082385380</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1663082385381</updated>
    </task>
    <task id="LOCAL-00005" summary="Implemented Mercenaries.java movement using the tick() method which goes from MapManager.java timer. Using dijkstra path finding algorithm for pathfinding.&#10;Implemented basic capital nodes where Mercenaries can be spawned.&#10;TODO: Create a proper unit test for Mercenaries movement through the map.&#10;TODO: Polish Player.java and everything related to Mercenaries creation and management.">
      <created>1663214797122</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1663214797122</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="base_implementation" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit." />
    <MESSAGE value="Initial implementation of most base classes before adding networking and pathfinding." />
    <MESSAGE value="Finished implementing serialization to the hard drive in json format and loading the save back into the system + relinking all the references using init()." />
    <MESSAGE value="Implemented Mercenaries.java movement using the tick() method which goes from MapManager.java timer. Using dijkstra path finding algorithm for pathfinding.&#10;Implemented basic capital nodes where Mercenaries can be spawned.&#10;TODO: Create a proper unit test for Mercenaries movement through the map.&#10;TODO: Polish Player.java and everything related to Mercenaries creation and management." />
    <option name="LAST_COMMIT_MESSAGE" value="Implemented Mercenaries.java movement using the tick() method which goes from MapManager.java timer. Using dijkstra path finding algorithm for pathfinding.&#10;Implemented basic capital nodes where Mercenaries can be spawned.&#10;TODO: Create a proper unit test for Mercenaries movement through the map.&#10;TODO: Polish Player.java and everything related to Mercenaries creation and management." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/gravelwars/core/managers/GameManager.java</url>
          <line>31</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>